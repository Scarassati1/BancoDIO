import textwrap

def menu():
    menu = """

    [0]\tDepositar
    [1]\tSacar
    [2]\tExtrato
    [3]\tNova conta
    [4]\tListar contas
    [5]\tNovo usuário
    [6]\tSair
    """
    return input(textwrap.dedent(menu))


def depositar(saldo, valor, extrato, /):
    if valor > 0:
            saldo += valor
            extrato += f'Deposito: R${valor:.2f} '
        else:
            print('Operação inválida, tente novamente..')
        return saldo, extrato

def sacar(*, saldo, valor, extrato, limite, numero_saques, LIMITE_SAQUES):
    if saque > 0:
            excedeu_saldo = saque > saldo
            excedeu_limite = saque > limite
            excedeu_saques = numero_saques >= LIMITE_SAQUES

            if excedeu_saldo:
                print('A operação falhou! Você não tem saldo suficiente.')

            elif excedeu_limite:
                print('A operação falhou! Você excedeu o limite de saque de R$500.')

            elif excedeu_saques:
                print('A operação falhou! Você já sacou 3 vezes.')

            elif:
                saldo -= saque
                extrato += f'Saque: R${saque:.2f} '
                numero_saques += 1
            
            else:
            print('Operação falhou! O valor informado é inválido.')

            return saldo, extrato

def exibir_extrato(saldo, /, *, extrato):
    print('========== EXTRATO ==========')
    print('Não foram realizados movimentos.' if not extrato else extrato)
    print(f'Saldo: R$ {saldo:.2f}')
    print('=============================')

def criar_usuario(usuarios):
    cpf = input('Informe o CPF (somente número): ')
    usuario = filtrar_usuario(cpf, usuarios)

    if usuario:
        print('Já existe usuário com esse CPF!')
        return

    nome = input('Informe o nome completo: ')
    data_nascimento = input('Informe a data de nascimento (dd-mm-aaaa): ')
    endereco = input('Informe o endereço (logradouro, nro - bairro - cidade/sigla estado): ')

    usuarios.append({"nome": nome, "data_nascimento": data_nascimento, "cpf": cpf, "endereco": endereco})

    print('~=~=~= Usuário criado com sucesso! ~=~=~=')

def filtrar_usuario(cpf, usuarios):
    usuarios_filtrados = [usuario for usuario in usuarios if usuario["cpf"] == cpf]
    return usuarios_filtrados[0] if usuarios_filtrados else None

def criar_conta(agencia, numero_conta, usuarios):
    cpf = input('Informe o CPF do usuário: ')
    usuario = filtrar_usuario(cpf, usuarios)

    if usuario:
        print('~=~=~= Conta criada com sucesso! ~=~=~=')
        return {"agencia": agencia, "numero_conta": numero_conta, "usuario": usuario}

    print('Usuario não encontrado, fluxo de criação de conta errada!')

def listar_contas(contas)
    for conta in contas
        linha = f"""\t
            Agencia:\t{conta['agencia']}
            C/C:\t\t{conta['numero_conta']}
            Titular:\t{conta['usuario']['nome]}
        """
        print("=" * 100)
        print(textwrap.dedent(linha))


def main()
    LIMITE_SAQUES = 3
    AGENCIA = "0001"

    saldo = 0
    limite = 500
    extrato = ''
    numero_saques = 0
    usuarios = []
    contas = []

    while True:

        opcao = menu()

        if opcao == 0:
            valor = float(input('Informe o valor do deposito:'))

            saldo, extrato = depositar(saldo, valor, extrato)

        elif opcao == 1:
            valor = float(input('Digite o valor do saque:'))

            saldo, extrato = sacar(
                saldo=saldo,
                valor=valor,
                extrato=extrato,
                limite=limite,
                numero_saques=numero_saques,
                limite_saques=LIMITE_SAQUES,
            )

        elif opcao == 2:
            exibir_extrato(saldo, extrato=extrato)

        elif opcao == 3:
            criar_usuario(usuarios)

        elif opcao == 4:
            numero_conta = len(contas) + 1
            conta = criar_conta(AGENCIA, numero_conta, usuarios)

            if conta:
                contas.append(conta)

        elif opcao == 5:
            listar_contas(contas)

        elif opcao == 6:
            break

main()

        






